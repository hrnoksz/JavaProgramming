Java Day51
Topic: Map
	   Enum

Package name: day51_Map


Map (I): It is an interface.
         it is a special data structure based on the key + value pairs
         part of collection
		 does not have IS A relation with Collection
		 does not support primitives
		 only supports non-primitives data type
		 size is dynamic, can be increased or decreased
		 map only accepts pairs, key and value
		 key has to be unique, but value can be unique or duplicated
		 does NOT index number, but it has unique key.
		 Therefore, we can use key inside the get method() to access value of the
		 given key.
		 hashMap.get(11);
		 Difference between map and collection is that when you store element in collection
		 you can only one element at the time, but you can store pairs of element in map

		HashMap, LinkedHashMap, TreeMap and Hashtable are four different objects of map.
		We need to understand the differences between those for classes so that you can make best decision
		when it comes to using the map.
		Each of them has own differences.
		So, first of all,

		HashMap (C): known as the fastest class // advantage
		             both key and value can be null
					 Maintains the random order, there is no guarantee about order //disadvantage

		LinkedHashMap (C): both key and value can be null
						keeps the insertion order

		TreeMap (C): key cannot be null, but value can be null
					 Maintains the sorted order, it sorted by the keys

		Hashtable (C):  both key and value CANNOT be null
						Maintains the random order like HashMap
						synchronized (thread-safe) //Therefore it is very slow

Methods of Map:

		put(key, value): inserts the given key and value to map

		get(key): returns the value of the given key

		replace(key, newValue): replaces the value of the given key with the given new value

		remove(key): removes the given key and its value from the map

		containsKey(key): returns true if the given key is contained in the map, otherwise returns false

		containsValue(Value): returns true if the given value is contained in the map, otherwise returns false

		isEmpty(): returns true if the size of the map is 0, otherwise returns false

		equals(Map): returns true if the given Map is equal with the current map, otherwise returns false

		clear(): removes all the pairs from the map

		---------------------------

		keySet(): returns all the keys of the map, returnType is Set

		values(): returns all the values of the map, returnType is Collection

		entrySet(): returns all the entries (Entry: key & value) of map

				getKey()
				getValue()
				setValue()

Enum:   It is a special data type
        It is small of set values
        It represents a group of constants (number of things)
        It is used for containing fixed set of constants
        a number of things
        Seasons: SPRING
                 SUMMER
                 FALL
                 WINTER

List< Map<String,Integer> >

Map < Map<String, Integer> , Map<String, Integer> >

Browser browser = "Cydeo"














