Java Day23
Topics: Custom Method Intro:
			Void method
package name: day23_CustomMethods_Void

Array: one of the three data structures
		size is fixed
		supports primitives & non-primitives
		can be multi-dimensional

	one dimensional array: array of elements
			[index Of Elements]

	multi-dimensional array: array of arrays. two or more dimensional ([][]..)
			[index of Arrays][index Of Elements]
			[][][]
			.....

			n dimensional array contains (n-1) dimensional array

Arrays: utility class for array. in "java.util" package

		toString(): is used to print single dimensional array
		deepToString(): is used to print multi dimensional array
		sort(): is used to sort the array in ascending order==> smallest to largest
		equals(): is used to check two arrays whether they are equal or not. returns boolean. it compares
		index by index
		copyOf(): is used to copy the elements of the array. returns new array
		copyOfRange(): is used to copy the elements of the array. returns new array.
		            int[] array = new int[5];
		            int[] newArray = Arrays.copyOfRange(array, 1, 4); ending index is excluded

String methods:
	toCharArray(): returns char array
	split(): returns string array

for each loop: already iterated
			   iteration order is fixed

			    THERE MUST BE A DATA STRUCTURE (array, collection, map)

			    for(DataType variable : Array){ // if array 5 elements, then for each loop iterates five times

			    }
			    the fastest way to get elements of any array, but for loop is more useful.

Task:
		step1 : reverse "Java"
		....

		step5: reverse "python"
		...

		step10: reverse "Cydeo"
		...

Method: Function

		public  static  void  main(String[] args){

		}

	declaring a method:

		Access-Modifier	 Specifier	  ReturnType     MethodName(Parameter){

		}

		Access modifiers: public, protected, default, private

		Specifier:  static, final, abstract, synchronized

		Return Type: void, Any Data Type

		Method Name: can be any name

		parameter: Any Data Type

Custom Methods:
	1. void methods
	2. void methods with arguments
	3. return methods
	4. returns with argument
	5. overloading

create a function that can print all the numbers between X and Y


